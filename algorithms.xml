<?xml version="1.0" encoding="UTF-8"?>
<project name="algorithms" default="all">
  
  
  <property file="algorithms.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.zip"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/packager.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.algs4.classpath">
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="jgoodies-forms.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module 8Puzzle -->
  
  <dirname property="module.8puzzle.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.8puzzle" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.8puzzle" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.8puzzle" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.8puzzle" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="8puzzle.output.dir" value="${module.8puzzle.basedir}/out/production/8Puzzle"/>
  <property name="8puzzle.testoutput.dir" value="${module.8puzzle.basedir}/out/test/8Puzzle"/>
  
  <path id="8puzzle.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="8puzzle.module.production.classpath">
    <path refid="${module.jdk.classpath.8puzzle}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="8puzzle.runtime.production.module.classpath">
    <pathelement location="${8puzzle.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="8puzzle.module.classpath">
    <path refid="${module.jdk.classpath.8puzzle}"/>
    <pathelement location="${8puzzle.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="8puzzle.runtime.module.classpath">
    <pathelement location="${8puzzle.testoutput.dir}"/>
    <pathelement location="${8puzzle.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.8puzzle">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.8puzzle">
    <patternset refid="excluded.from.module.8puzzle"/>
  </patternset>
  
  <path id="8puzzle.module.sourcepath">
    <dirset dir="${module.8puzzle.basedir}/8Puzzle">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.8puzzle" depends="compile.module.8puzzle.production,compile.module.8puzzle.tests" description="Compile module 8Puzzle"/>
  
  <target name="compile.module.8puzzle.production" depends="register.custom.compilers" description="Compile module 8Puzzle; production classes">
    <mkdir dir="${8puzzle.output.dir}"/>
    <javac2 destdir="${8puzzle.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.8puzzle}/javac">
      <compilerarg line="${compiler.args.8puzzle}"/>
      <bootclasspath refid="8puzzle.module.bootclasspath"/>
      <classpath refid="8puzzle.module.production.classpath"/>
      <src refid="8puzzle.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.8puzzle"/>
    </javac2>
    
    <copy todir="${8puzzle.output.dir}">
      <fileset dir="${module.8puzzle.basedir}/8Puzzle/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.8puzzle.tests" depends="register.custom.compilers,compile.module.8puzzle.production" description="compile module 8Puzzle; test classes" unless="skip.tests"/>
  
  <target name="clean.module.8puzzle" description="cleanup module">
    <delete dir="${8puzzle.output.dir}"/>
    <delete dir="${8puzzle.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Algorithms -->
  
  <dirname property="module.algorithms.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.algorithms" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.algorithms" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.algorithms" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.algorithms" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="algorithms.output.dir" value="${module.algorithms.basedir}/out/production/Algorithms"/>
  <property name="algorithms.testoutput.dir" value="${module.algorithms.basedir}/out/test/Algorithms"/>
  
  <path id="algorithms.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="algorithms.module.production.classpath">
    <path refid="${module.jdk.classpath.algorithms}"/>
    <path refid="library.algs4.classpath"/>
  </path>
  
  <path id="algorithms.runtime.production.module.classpath">
    <pathelement location="${algorithms.output.dir}"/>
    <path refid="library.algs4.classpath"/>
  </path>
  
  <path id="algorithms.module.classpath">
    <path refid="${module.jdk.classpath.algorithms}"/>
    <pathelement location="${algorithms.output.dir}"/>
    <path refid="library.algs4.classpath"/>
  </path>
  
  <path id="algorithms.runtime.module.classpath">
    <pathelement location="${algorithms.testoutput.dir}"/>
    <pathelement location="${algorithms.output.dir}"/>
    <path refid="library.algs4.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.algorithms">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.algorithms">
    <patternset refid="excluded.from.module.algorithms"/>
  </patternset>
  
  
  <target name="compile.module.algorithms" depends="compile.module.algorithms.production,compile.module.algorithms.tests" description="Compile module Algorithms"/>
  
  <target name="compile.module.algorithms.production" depends="register.custom.compilers" description="Compile module Algorithms; production classes"/>
  
  <target name="compile.module.algorithms.tests" depends="register.custom.compilers,compile.module.algorithms.production" description="compile module Algorithms; test classes" unless="skip.tests"/>
  
  <target name="clean.module.algorithms" description="cleanup module">
    <delete dir="${algorithms.output.dir}"/>
    <delete dir="${algorithms.testoutput.dir}"/>
  </target>
  
  
  <!-- Module KDTrees -->
  
  <dirname property="module.kdtrees.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.kdtrees" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.kdtrees" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.kdtrees" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.kdtrees" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="kdtrees.output.dir" value="${module.kdtrees.basedir}/out/production/KDTrees"/>
  <property name="kdtrees.testoutput.dir" value="${module.kdtrees.basedir}/out/test/KDTrees"/>
  
  <path id="kdtrees.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="kdtrees.module.production.classpath">
    <path refid="${module.jdk.classpath.kdtrees}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="kdtrees.runtime.production.module.classpath">
    <pathelement location="${kdtrees.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="kdtrees.module.classpath">
    <path refid="${module.jdk.classpath.kdtrees}"/>
    <pathelement location="${kdtrees.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="kdtrees.runtime.module.classpath">
    <pathelement location="${kdtrees.testoutput.dir}"/>
    <pathelement location="${kdtrees.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.kdtrees">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.kdtrees">
    <patternset refid="excluded.from.module.kdtrees"/>
  </patternset>
  
  <path id="kdtrees.module.sourcepath">
    <dirset dir="${module.kdtrees.basedir}/KDTrees">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.kdtrees" depends="compile.module.kdtrees.production,compile.module.kdtrees.tests" description="Compile module KDTrees"/>
  
  <target name="compile.module.kdtrees.production" depends="register.custom.compilers" description="Compile module KDTrees; production classes">
    <mkdir dir="${kdtrees.output.dir}"/>
    <javac2 destdir="${kdtrees.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.kdtrees}/javac">
      <compilerarg line="${compiler.args.kdtrees}"/>
      <bootclasspath refid="kdtrees.module.bootclasspath"/>
      <classpath refid="kdtrees.module.production.classpath"/>
      <src refid="kdtrees.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.kdtrees"/>
    </javac2>
    
    <copy todir="${kdtrees.output.dir}">
      <fileset dir="${module.kdtrees.basedir}/KDTrees/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.kdtrees.tests" depends="register.custom.compilers,compile.module.kdtrees.production" description="compile module KDTrees; test classes" unless="skip.tests"/>
  
  <target name="clean.module.kdtrees" description="cleanup module">
    <delete dir="${kdtrees.output.dir}"/>
    <delete dir="${kdtrees.testoutput.dir}"/>
  </target>
  
  
  <!-- Module PatternRecognition -->
  
  <dirname property="module.patternrecognition.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.patternrecognition" value="${jdk.home.1.8}"/>
  <property name="module.jdk.bin.patternrecognition" value="${jdk.bin.1.8}"/>
  <property name="module.jdk.classpath.patternrecognition" value="jdk.classpath.1.8"/>
  
  <property name="compiler.args.patternrecognition" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="patternrecognition.output.dir" value="${module.patternrecognition.basedir}/out/production/PatternRecognition"/>
  <property name="patternrecognition.testoutput.dir" value="${module.patternrecognition.basedir}/out/test/PatternRecognition"/>
  
  <path id="patternrecognition.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="patternrecognition.module.production.classpath">
    <path refid="${module.jdk.classpath.patternrecognition}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="patternrecognition.runtime.production.module.classpath">
    <pathelement location="${patternrecognition.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="patternrecognition.module.classpath">
    <path refid="${module.jdk.classpath.patternrecognition}"/>
    <pathelement location="${patternrecognition.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="patternrecognition.runtime.module.classpath">
    <pathelement location="${patternrecognition.testoutput.dir}"/>
    <pathelement location="${patternrecognition.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.patternrecognition">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.patternrecognition">
    <patternset refid="excluded.from.module.patternrecognition"/>
  </patternset>
  
  <path id="patternrecognition.module.sourcepath">
    <dirset dir="${module.patternrecognition.basedir}/PatternRecognition">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.patternrecognition" depends="compile.module.patternrecognition.production,compile.module.patternrecognition.tests" description="Compile module PatternRecognition"/>
  
  <target name="compile.module.patternrecognition.production" depends="register.custom.compilers" description="Compile module PatternRecognition; production classes">
    <mkdir dir="${patternrecognition.output.dir}"/>
    <javac2 destdir="${patternrecognition.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.patternrecognition}/javac">
      <compilerarg line="${compiler.args.patternrecognition}"/>
      <bootclasspath refid="patternrecognition.module.bootclasspath"/>
      <classpath refid="patternrecognition.module.production.classpath"/>
      <src refid="patternrecognition.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.patternrecognition"/>
    </javac2>
    
    <copy todir="${patternrecognition.output.dir}">
      <fileset dir="${module.patternrecognition.basedir}/PatternRecognition/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.patternrecognition.tests" depends="register.custom.compilers,compile.module.patternrecognition.production" description="compile module PatternRecognition; test classes" unless="skip.tests"/>
  
  <target name="clean.module.patternrecognition" description="cleanup module">
    <delete dir="${patternrecognition.output.dir}"/>
    <delete dir="${patternrecognition.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Percolation -->
  
  <dirname property="module.percolation.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.percolation" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.percolation" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.percolation" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.percolation" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="percolation.output.dir" value="${module.percolation.basedir}/out/production/Percolation"/>
  <property name="percolation.testoutput.dir" value="${module.percolation.basedir}/out/test/Percolation"/>
  
  <path id="percolation.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="percolation.module.production.classpath">
    <path refid="${module.jdk.classpath.percolation}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="percolation.runtime.production.module.classpath">
    <pathelement location="${percolation.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="percolation.module.classpath">
    <path refid="${module.jdk.classpath.percolation}"/>
    <pathelement location="${percolation.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="percolation.runtime.module.classpath">
    <pathelement location="${percolation.testoutput.dir}"/>
    <pathelement location="${percolation.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.percolation">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.percolation">
    <patternset refid="excluded.from.module.percolation"/>
  </patternset>
  
  <path id="percolation.module.sourcepath">
    <dirset dir="${module.percolation.basedir}/Percolation">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.percolation" depends="compile.module.percolation.production,compile.module.percolation.tests" description="Compile module Percolation"/>
  
  <target name="compile.module.percolation.production" depends="register.custom.compilers" description="Compile module Percolation; production classes">
    <mkdir dir="${percolation.output.dir}"/>
    <javac2 destdir="${percolation.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.percolation}/javac">
      <compilerarg line="${compiler.args.percolation}"/>
      <bootclasspath refid="percolation.module.bootclasspath"/>
      <classpath refid="percolation.module.production.classpath"/>
      <src refid="percolation.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.percolation"/>
    </javac2>
    
    <copy todir="${percolation.output.dir}">
      <fileset dir="${module.percolation.basedir}/Percolation/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.percolation.tests" depends="register.custom.compilers,compile.module.percolation.production" description="compile module Percolation; test classes" unless="skip.tests"/>
  
  <target name="clean.module.percolation" description="cleanup module">
    <delete dir="${percolation.output.dir}"/>
    <delete dir="${percolation.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Queues -->
  
  <dirname property="module.queues.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.queues" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.queues" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.queues" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.queues" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="queues.output.dir" value="${module.queues.basedir}/out/production/Queues"/>
  <property name="queues.testoutput.dir" value="${module.queues.basedir}/out/test/Queues"/>
  
  <path id="queues.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="queues.module.production.classpath">
    <path refid="${module.jdk.classpath.queues}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="queues.runtime.production.module.classpath">
    <pathelement location="${queues.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="queues.module.classpath">
    <path refid="${module.jdk.classpath.queues}"/>
    <pathelement location="${queues.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  <path id="queues.runtime.module.classpath">
    <pathelement location="${queues.testoutput.dir}"/>
    <pathelement location="${queues.output.dir}"/>
    <pathelement location="${basedir}/algs4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.queues">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.queues">
    <patternset refid="excluded.from.module.queues"/>
  </patternset>
  
  <path id="queues.module.sourcepath">
    <dirset dir="${module.queues.basedir}/Queues">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.queues" depends="compile.module.queues.production,compile.module.queues.tests" description="Compile module Queues"/>
  
  <target name="compile.module.queues.production" depends="register.custom.compilers" description="Compile module Queues; production classes">
    <mkdir dir="${queues.output.dir}"/>
    <javac2 destdir="${queues.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.queues}/javac">
      <compilerarg line="${compiler.args.queues}"/>
      <bootclasspath refid="queues.module.bootclasspath"/>
      <classpath refid="queues.module.production.classpath"/>
      <src refid="queues.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.queues"/>
    </javac2>
    
    <copy todir="${queues.output.dir}">
      <fileset dir="${module.queues.basedir}/Queues/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.queues.tests" depends="register.custom.compilers,compile.module.queues.production" description="compile module Queues; test classes" unless="skip.tests"/>
  
  <target name="clean.module.queues" description="cleanup module">
    <delete dir="${queues.output.dir}"/>
    <delete dir="${queues.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.8puzzle, clean.module.algorithms, clean.module.kdtrees, clean.module.patternrecognition, clean.module.percolation, clean.module.queues" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.8puzzle, compile.module.algorithms, compile.module.kdtrees, compile.module.patternrecognition, compile.module.percolation, compile.module.queues" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>